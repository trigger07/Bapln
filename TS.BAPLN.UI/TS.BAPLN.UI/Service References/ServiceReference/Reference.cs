//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TS.BAPLN.UI.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerEsudiantes", ReplyAction="http://tempuri.org/IService/ObtenerEsudiantesResponse")]
        TS.BAPLN.DataEntities.DTO.EstudianteDTO[] ObtenerEsudiantes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerEsudiantes", ReplyAction="http://tempuri.org/IService/ObtenerEsudiantesResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.EstudianteDTO[]> ObtenerEsudiantesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerEsudiante", ReplyAction="http://tempuri.org/IService/ObtenerEsudianteResponse")]
        TS.BAPLN.DataEntities.DTO.EstudianteDTO ObtenerEsudiante(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerEsudiante", ReplyAction="http://tempuri.org/IService/ObtenerEsudianteResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.EstudianteDTO> ObtenerEsudianteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearEstudiante", ReplyAction="http://tempuri.org/IService/CrearEstudianteResponse")]
        void CrearEstudiante(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearEstudiante", ReplyAction="http://tempuri.org/IService/CrearEstudianteResponse")]
        System.Threading.Tasks.Task CrearEstudianteAsync(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InactivarEstudiante", ReplyAction="http://tempuri.org/IService/InactivarEstudianteResponse")]
        void InactivarEstudiante(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InactivarEstudiante", ReplyAction="http://tempuri.org/IService/InactivarEstudianteResponse")]
        System.Threading.Tasks.Task InactivarEstudianteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActivarEstudiante", ReplyAction="http://tempuri.org/IService/ActivarEstudianteResponse")]
        void ActivarEstudiante(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActivarEstudiante", ReplyAction="http://tempuri.org/IService/ActivarEstudianteResponse")]
        System.Threading.Tasks.Task ActivarEstudianteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarEstudiante", ReplyAction="http://tempuri.org/IService/ActualizarEstudianteResponse")]
        bool ActualizarEstudiante(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarEstudiante", ReplyAction="http://tempuri.org/IService/ActualizarEstudianteResponse")]
        System.Threading.Tasks.Task<bool> ActualizarEstudianteAsync(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerNacionalidades", ReplyAction="http://tempuri.org/IService/ObtenerNacionalidadesResponse")]
        TS.BAPLN.DataEntities.DTO.NacionalidadDTO[] ObtenerNacionalidades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerNacionalidades", ReplyAction="http://tempuri.org/IService/ObtenerNacionalidadesResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.NacionalidadDTO[]> ObtenerNacionalidadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerTipoBecas", ReplyAction="http://tempuri.org/IService/ObtenerTipoBecasResponse")]
        TS.BAPLN.DataEntities.DTO.TipoBecaDTO[] ObtenerTipoBecas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerTipoBecas", ReplyAction="http://tempuri.org/IService/ObtenerTipoBecasResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.TipoBecaDTO[]> ObtenerTipoBecasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerBecas", ReplyAction="http://tempuri.org/IService/ObtenerBecasResponse")]
        TS.BAPLN.DataEntities.DTO.BecaDTO[] ObtenerBecas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerBecas", ReplyAction="http://tempuri.org/IService/ObtenerBecasResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.BecaDTO[]> ObtenerBecasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InactivarBeca", ReplyAction="http://tempuri.org/IService/InactivarBecaResponse")]
        void InactivarBeca(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InactivarBeca", ReplyAction="http://tempuri.org/IService/InactivarBecaResponse")]
        System.Threading.Tasks.Task InactivarBecaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActivarBeca", ReplyAction="http://tempuri.org/IService/ActivarBecaResponse")]
        void ActivarBeca(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActivarBeca", ReplyAction="http://tempuri.org/IService/ActivarBecaResponse")]
        System.Threading.Tasks.Task ActivarBecaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearBeca", ReplyAction="http://tempuri.org/IService/CrearBecaResponse")]
        void CrearBeca(TS.BAPLN.DataEntities.DTO.BecaDTO beca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearBeca", ReplyAction="http://tempuri.org/IService/CrearBecaResponse")]
        System.Threading.Tasks.Task CrearBecaAsync(TS.BAPLN.DataEntities.DTO.BecaDTO beca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarBeca", ReplyAction="http://tempuri.org/IService/ActualizarBecaResponse")]
        bool ActualizarBeca(TS.BAPLN.DataEntities.DTO.BecaDTO beca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarBeca", ReplyAction="http://tempuri.org/IService/ActualizarBecaResponse")]
        System.Threading.Tasks.Task<bool> ActualizarBecaAsync(TS.BAPLN.DataEntities.DTO.BecaDTO beca);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerBecaPorId", ReplyAction="http://tempuri.org/IService/ObtenerBecaPorIdResponse")]
        TS.BAPLN.DataEntities.DTO.BecaDTO ObtenerBecaPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerBecaPorId", ReplyAction="http://tempuri.org/IService/ObtenerBecaPorIdResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.BecaDTO> ObtenerBecaPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearBecaEstudiante", ReplyAction="http://tempuri.org/IService/CrearBecaEstudianteResponse")]
        void CrearBecaEstudiante(TS.BAPLN.DataEntities.DTO.BecaEstudianteDTO beDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearBecaEstudiante", ReplyAction="http://tempuri.org/IService/CrearBecaEstudianteResponse")]
        System.Threading.Tasks.Task CrearBecaEstudianteAsync(TS.BAPLN.DataEntities.DTO.BecaEstudianteDTO beDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerBecasActivas", ReplyAction="http://tempuri.org/IService/ObtenerBecasActivasResponse")]
        TS.BAPLN.DataEntities.DTO.BecaDTO[] ObtenerBecasActivas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerBecasActivas", ReplyAction="http://tempuri.org/IService/ObtenerBecasActivasResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.BecaDTO[]> ObtenerBecasActivasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerEstudiantesAutocomplete", ReplyAction="http://tempuri.org/IService/ObtenerEstudiantesAutocompleteResponse")]
        TS.BAPLN.DataEntities.DTO.EstudianteDTO[] ObtenerEstudiantesAutocomplete(string filtro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerEstudiantesAutocomplete", ReplyAction="http://tempuri.org/IService/ObtenerEstudiantesAutocompleteResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.EstudianteDTO[]> ObtenerEstudiantesAutocompleteAsync(string filtro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerDonadores", ReplyAction="http://tempuri.org/IService/ObtenerDonadoresResponse")]
        TS.BAPLN.DataEntities.DTO.DonadorDTO[] ObtenerDonadores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerDonadores", ReplyAction="http://tempuri.org/IService/ObtenerDonadoresResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.DonadorDTO[]> ObtenerDonadoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerDonador", ReplyAction="http://tempuri.org/IService/ObtenerDonadorResponse")]
        TS.BAPLN.DataEntities.DTO.DonadorDTO ObtenerDonador(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerDonador", ReplyAction="http://tempuri.org/IService/ObtenerDonadorResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.DonadorDTO> ObtenerDonadorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearDonador", ReplyAction="http://tempuri.org/IService/CrearDonadorResponse")]
        void CrearDonador(TS.BAPLN.DataEntities.DTO.DonadorDTO donador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CrearDonador", ReplyAction="http://tempuri.org/IService/CrearDonadorResponse")]
        System.Threading.Tasks.Task CrearDonadorAsync(TS.BAPLN.DataEntities.DTO.DonadorDTO donador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InactivarDonador", ReplyAction="http://tempuri.org/IService/InactivarDonadorResponse")]
        void InactivarDonador(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InactivarDonador", ReplyAction="http://tempuri.org/IService/InactivarDonadorResponse")]
        System.Threading.Tasks.Task InactivarDonadorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActivarDonador", ReplyAction="http://tempuri.org/IService/ActivarDonadorResponse")]
        void ActivarDonador(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActivarDonador", ReplyAction="http://tempuri.org/IService/ActivarDonadorResponse")]
        System.Threading.Tasks.Task ActivarDonadorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarDonador", ReplyAction="http://tempuri.org/IService/ActualizarDonadorResponse")]
        bool ActualizarDonador(TS.BAPLN.DataEntities.DTO.DonadorDTO estudiante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ActualizarDonador", ReplyAction="http://tempuri.org/IService/ActualizarDonadorResponse")]
        System.Threading.Tasks.Task<bool> ActualizarDonadorAsync(TS.BAPLN.DataEntities.DTO.DonadorDTO estudiante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerPeriodicidades", ReplyAction="http://tempuri.org/IService/ObtenerPeriodicidadesResponse")]
        TS.BAPLN.DataEntities.DTO.PeriodicidadDTO[] ObtenerPeriodicidades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ObtenerPeriodicidades", ReplyAction="http://tempuri.org/IService/ObtenerPeriodicidadesResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.PeriodicidadDTO[]> ObtenerPeriodicidadesAsync();

        #region Materia
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoMaterias", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoMateriasResponse")]
        TS.BAPLN.DataEntities.DTO.MateriaDTO[] ObtenerCatalogoMaterias();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoMaterias", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoMateriasResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.MateriaDTO[]> ObtenerCatalogoMateriasAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerMaterias", ReplyAction = "http://tempuri.org/IService/ObtenerMateriasResponse")]
        TS.BAPLN.DataEntities.DTO.MateriaDTO[] ObtenerMaterias(int idInstitucion);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerMaterias", ReplyAction = "http://tempuri.org/IService/ObtenerMateriasResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.MateriaDTO[]> ObtenerMateriasAsync(int idInstitucion);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarMateria", ReplyAction = "http://tempuri.org/IService/ActualizarMateriaResponse")]
        void ActualizarMateria(TS.BAPLN.DataEntities.DTO.MateriaDTO materia);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarMateria", ReplyAction = "http://tempuri.org/IService/ActualizarMateriaResponse")]
        System.Threading.Tasks.Task ActualizarMateriaAsync(TS.BAPLN.DataEntities.DTO.MateriaDTO materia);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarMateria", ReplyAction = "http://tempuri.org/IService/InactivarMateriaResponse")]
        void InactivarMateria(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarMateria", ReplyAction = "http://tempuri.org/IService/InactivarMateriaResponse")]
        System.Threading.Tasks.Task InactivarMateriaAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarMateria", ReplyAction = "http://tempuri.org/IService/ActivarMateriaResponse")]
        void ActivarMateria(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarMateria", ReplyAction = "http://tempuri.org/IService/ActivarMateriaResponse")]
        System.Threading.Tasks.Task ActivarMateriaAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarMateria", ReplyAction = "http://tempuri.org/IService/BorrarMateriaResponse")]
        int BorrarMateria(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarMateria", ReplyAction = "http://tempuri.org/IService/BorrarMateriaResponse")]
        System.Threading.Tasks.Task<int> BorrarMateriaAsync(int id);
        #endregion

        #region Periodo
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoPeriodos", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoPeriodosResponse")]
        TS.BAPLN.DataEntities.DTO.PeriodoDTO[] ObtenerCatalogoPeriodos();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoPeriodos", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoPeriodosResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.PeriodoDTO[]> ObtenerCatalogoPeriodosAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerPeriodos", ReplyAction = "http://tempuri.org/IService/ObtenerPeriodosResponse")]
        TS.BAPLN.DataEntities.DTO.PeriodoDTO[] ObtenerPeriodos(int idInstitucion);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerPeriodos", ReplyAction = "http://tempuri.org/IService/ObtenerPeriodosResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.PeriodoDTO[]> ObtenerPeriodosAsync(int idInstitucion);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarPeriodo", ReplyAction = "http://tempuri.org/IService/ActualizarPeriodoResponse")]
        void ActualizarPeriodo(TS.BAPLN.DataEntities.DTO.PeriodoDTO periodo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarPeriodo", ReplyAction = "http://tempuri.org/IService/ActualizarPeriodoResponse")]
        System.Threading.Tasks.Task ActualizarPeriodoAsync(TS.BAPLN.DataEntities.DTO.PeriodoDTO periodo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarPeriodo", ReplyAction = "http://tempuri.org/IService/InactivarPeriodoResponse")]
        void InactivarPeriodo(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarPeriodo", ReplyAction = "http://tempuri.org/IService/InactivarPeriodoResponse")]
        System.Threading.Tasks.Task InactivarPeriodoAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarPeriodo", ReplyAction = "http://tempuri.org/IService/ActivarPeriodoResponse")]
        void ActivarPeriodo(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarPeriodo", ReplyAction = "http://tempuri.org/IService/ActivarPeriodoResponse")]
        System.Threading.Tasks.Task ActivarPeriodoAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarPeriodo", ReplyAction = "http://tempuri.org/IService/BorrarPeriodoResponse")]
        int BorrarPeriodo(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarPeriodo", ReplyAction = "http://tempuri.org/IService/BorrarPeriodoResponse")]
        System.Threading.Tasks.Task<int> BorrarPeriodoAsync(int id);
        #endregion

        #region Nivel
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoNiveles", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoNivelesResponse")]
        TS.BAPLN.DataEntities.DTO.NivelDTO[] ObtenerCatalogoNiveles();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoNiveles", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoNivelesResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.NivelDTO[]> ObtenerCatalogoNivelesAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerNiveles", ReplyAction = "http://tempuri.org/IService/ObtenerNivelesResponse")]
        TS.BAPLN.DataEntities.DTO.NivelDTO[] ObtenerNiveles(int idInstitucion);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerNiveles", ReplyAction = "http://tempuri.org/IService/ObtenerNivelesResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.NivelDTO[]> ObtenerNivelesAsync(int idInstitucion);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarNivel", ReplyAction = "http://tempuri.org/IService/ActualizarNivelResponse")]
        void ActualizarNivel(TS.BAPLN.DataEntities.DTO.NivelDTO nivel);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarNivel", ReplyAction = "http://tempuri.org/IService/ActualizarNivelResponse")]
        System.Threading.Tasks.Task ActualizarNivelAsync(TS.BAPLN.DataEntities.DTO.NivelDTO nivel);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarNivel", ReplyAction = "http://tempuri.org/IService/InactivarNivelResponse")]
        void InactivarNivel(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarNivel", ReplyAction = "http://tempuri.org/IService/InactivarNivelResponse")]
        System.Threading.Tasks.Task InactivarNivelAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarNivel", ReplyAction = "http://tempuri.org/IService/ActivarNivelResponse")]
        void ActivarNivel(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarNivel", ReplyAction = "http://tempuri.org/IService/ActivarNivelResponse")]
        System.Threading.Tasks.Task ActivarNivelAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarNivel", ReplyAction = "http://tempuri.org/IService/BorrarNivelResponse")]
        int BorrarNivel(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarNivel", ReplyAction = "http://tempuri.org/IService/BorrarNivelResponse")]
        System.Threading.Tasks.Task<int> BorrarNivelAsync(int id);
        #endregion

        #region CursoLectivo
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoCursosLectivos", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoCursosLectivosResponse")]
        TS.BAPLN.DataEntities.DTO.CursoLectivoDTO[] ObtenerCatalogoCursosLectivos();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerCatalogoCursosLectivos", ReplyAction = "http://tempuri.org/IService/ObtenerCatalogoCursosLectivosResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.CursoLectivoDTO[]> ObtenerCatalogoCursosLectivosAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarCursoLectivo", ReplyAction = "http://tempuri.org/IService/ActualizarCursoLectivoResponse")]
        void ActualizarCursoLectivo(TS.BAPLN.DataEntities.DTO.CursoLectivoDTO cursoLectivo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarCursoLectivo", ReplyAction = "http://tempuri.org/IService/ActualizarCursoLectivoResponse")]
        System.Threading.Tasks.Task ActualizarCursoLectivoAsync(TS.BAPLN.DataEntities.DTO.CursoLectivoDTO cursoLectivo);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarCursoLectivo", ReplyAction = "http://tempuri.org/IService/InactivarCursoLectivoResponse")]
        void InactivarCursoLectivo(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/InactivarCursoLectivo", ReplyAction = "http://tempuri.org/IService/InactivarCursoLectivoResponse")]
        System.Threading.Tasks.Task InactivarCursoLectivoAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarCursoLectivo", ReplyAction = "http://tempuri.org/IService/ActivarCursoLectivoResponse")]
        void ActivarCursoLectivo(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActivarCursoLectivo", ReplyAction = "http://tempuri.org/IService/ActivarCursoLectivoResponse")]
        System.Threading.Tasks.Task ActivarCursoLectivoAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarCursoLectivo", ReplyAction = "http://tempuri.org/IService/BorrarCursoLectivoResponse")]
        int BorrarCursoLectivo(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/BorrarCursoLectivo", ReplyAction = "http://tempuri.org/IService/BorrarCursoLectivoResponse")]
        System.Threading.Tasks.Task<int> BorrarCursoLectivoAsync(int id);
        #endregion

        #region Institucion
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerInstituciones", ReplyAction = "http://tempuri.org/IService/ObtenerInstitucionesResponse")]
        TS.BAPLN.DataEntities.DTO.InstitucionDTO[] ObtenerInstituciones();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerInstituciones", ReplyAction = "http://tempuri.org/IService/ObtenerInstitucionesResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.InstitucionDTO[]> ObtenerInstitucionesAsync();

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerInstitucion", ReplyAction = "http://tempuri.org/IService/ObtenerInstitucionResponse")]
        TS.BAPLN.DataEntities.DTO.InstitucionDTO ObtenerInstitucion(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ObtenerInstitucion", ReplyAction = "http://tempuri.org/IService/ObtenerInstitucionResponse")]
        System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.InstitucionDTO> ObtenerInstitucionAsync(int id);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarInstitucion", ReplyAction = "http://tempuri.org/IService/ActualizarInstitucionResponse")]
        bool ActualizarInstitucion(TS.BAPLN.DataEntities.DTO.InstitucionDTO institucion, int[] materiasIds, int[] periodosIds, int[] nivelesIds);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IService/ActualizarInstitucion", ReplyAction = "http://tempuri.org/IService/ActualizarInstitucionResponse")]
        System.Threading.Tasks.Task<bool> ActualizarInstitucionAsync(TS.BAPLN.DataEntities.DTO.InstitucionDTO estudiante, int[] materiasIds, int[] periodosIds, int[] nivelesIds);

        #endregion
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TS.BAPLN.UI.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TS.BAPLN.UI.ServiceReference.IService>, TS.BAPLN.UI.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TS.BAPLN.DataEntities.DTO.EstudianteDTO[] ObtenerEsudiantes() {
            return base.Channel.ObtenerEsudiantes();
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.EstudianteDTO[]> ObtenerEsudiantesAsync() {
            return base.Channel.ObtenerEsudiantesAsync();
        }
        
        public TS.BAPLN.DataEntities.DTO.EstudianteDTO ObtenerEsudiante(int id) {
            return base.Channel.ObtenerEsudiante(id);
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.EstudianteDTO> ObtenerEsudianteAsync(int id) {
            return base.Channel.ObtenerEsudianteAsync(id);
        }
        
        public void CrearEstudiante(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante) {
            base.Channel.CrearEstudiante(estudiante);
        }
        
        public System.Threading.Tasks.Task CrearEstudianteAsync(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante) {
            return base.Channel.CrearEstudianteAsync(estudiante);
        }
        
        public void InactivarEstudiante(int id) {
            base.Channel.InactivarEstudiante(id);
        }
        
        public System.Threading.Tasks.Task InactivarEstudianteAsync(int id) {
            return base.Channel.InactivarEstudianteAsync(id);
        }
        
        public void ActivarEstudiante(int id) {
            base.Channel.ActivarEstudiante(id);
        }
        
        public System.Threading.Tasks.Task ActivarEstudianteAsync(int id) {
            return base.Channel.ActivarEstudianteAsync(id);
        }
        
        public bool ActualizarEstudiante(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante) {
            return base.Channel.ActualizarEstudiante(estudiante);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarEstudianteAsync(TS.BAPLN.DataEntities.DTO.EstudianteDTO estudiante) {
            return base.Channel.ActualizarEstudianteAsync(estudiante);
        }
        
        public TS.BAPLN.DataEntities.DTO.NacionalidadDTO[] ObtenerNacionalidades() {
            return base.Channel.ObtenerNacionalidades();
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.NacionalidadDTO[]> ObtenerNacionalidadesAsync() {
            return base.Channel.ObtenerNacionalidadesAsync();
        }
        
        public TS.BAPLN.DataEntities.DTO.TipoBecaDTO[] ObtenerTipoBecas() {
            return base.Channel.ObtenerTipoBecas();
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.TipoBecaDTO[]> ObtenerTipoBecasAsync() {
            return base.Channel.ObtenerTipoBecasAsync();
        }
        
        public TS.BAPLN.DataEntities.DTO.BecaDTO[] ObtenerBecas() {
            return base.Channel.ObtenerBecas();
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.BecaDTO[]> ObtenerBecasAsync() {
            return base.Channel.ObtenerBecasAsync();
        }
        
        public void InactivarBeca(int id) {
            base.Channel.InactivarBeca(id);
        }
        
        public System.Threading.Tasks.Task InactivarBecaAsync(int id) {
            return base.Channel.InactivarBecaAsync(id);
        }
        
        public void ActivarBeca(int id) {
            base.Channel.ActivarBeca(id);
        }
        
        public System.Threading.Tasks.Task ActivarBecaAsync(int id) {
            return base.Channel.ActivarBecaAsync(id);
        }
        
        public void CrearBeca(TS.BAPLN.DataEntities.DTO.BecaDTO beca) {
            base.Channel.CrearBeca(beca);
        }
        
        public System.Threading.Tasks.Task CrearBecaAsync(TS.BAPLN.DataEntities.DTO.BecaDTO beca) {
            return base.Channel.CrearBecaAsync(beca);
        }
        
        public bool ActualizarBeca(TS.BAPLN.DataEntities.DTO.BecaDTO beca) {
            return base.Channel.ActualizarBeca(beca);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarBecaAsync(TS.BAPLN.DataEntities.DTO.BecaDTO beca) {
            return base.Channel.ActualizarBecaAsync(beca);
        }
        
        public TS.BAPLN.DataEntities.DTO.BecaDTO ObtenerBecaPorId(int id) {
            return base.Channel.ObtenerBecaPorId(id);
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.BecaDTO> ObtenerBecaPorIdAsync(int id) {
            return base.Channel.ObtenerBecaPorIdAsync(id);
        }
        
        public void CrearBecaEstudiante(TS.BAPLN.DataEntities.DTO.BecaEstudianteDTO beDto) {
            base.Channel.CrearBecaEstudiante(beDto);
        }
        
        public System.Threading.Tasks.Task CrearBecaEstudianteAsync(TS.BAPLN.DataEntities.DTO.BecaEstudianteDTO beDto) {
            return base.Channel.CrearBecaEstudianteAsync(beDto);
        }
        
        public TS.BAPLN.DataEntities.DTO.BecaDTO[] ObtenerBecasActivas() {
            return base.Channel.ObtenerBecasActivas();
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.BecaDTO[]> ObtenerBecasActivasAsync() {
            return base.Channel.ObtenerBecasActivasAsync();
        }
        
        public TS.BAPLN.DataEntities.DTO.EstudianteDTO[] ObtenerEstudiantesAutocomplete(string filtro) {
            return base.Channel.ObtenerEstudiantesAutocomplete(filtro);
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.EstudianteDTO[]> ObtenerEstudiantesAutocompleteAsync(string filtro) {
            return base.Channel.ObtenerEstudiantesAutocompleteAsync(filtro);
        }
        
        public TS.BAPLN.DataEntities.DTO.DonadorDTO[] ObtenerDonadores() {
            return base.Channel.ObtenerDonadores();
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.DonadorDTO[]> ObtenerDonadoresAsync() {
            return base.Channel.ObtenerDonadoresAsync();
        }
        
        public TS.BAPLN.DataEntities.DTO.DonadorDTO ObtenerDonador(int id) {
            return base.Channel.ObtenerDonador(id);
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.DonadorDTO> ObtenerDonadorAsync(int id) {
            return base.Channel.ObtenerDonadorAsync(id);
        }
        
        public void CrearDonador(TS.BAPLN.DataEntities.DTO.DonadorDTO donador) {
            base.Channel.CrearDonador(donador);
        }
        
        public System.Threading.Tasks.Task CrearDonadorAsync(TS.BAPLN.DataEntities.DTO.DonadorDTO donador) {
            return base.Channel.CrearDonadorAsync(donador);
        }
        
        public void InactivarDonador(int id) {
            base.Channel.InactivarDonador(id);
        }
        
        public System.Threading.Tasks.Task InactivarDonadorAsync(int id) {
            return base.Channel.InactivarDonadorAsync(id);
        }
        
        public void ActivarDonador(int id) {
            base.Channel.ActivarDonador(id);
        }
        
        public System.Threading.Tasks.Task ActivarDonadorAsync(int id) {
            return base.Channel.ActivarDonadorAsync(id);
        }
        
        public bool ActualizarDonador(TS.BAPLN.DataEntities.DTO.DonadorDTO estudiante) {
            return base.Channel.ActualizarDonador(estudiante);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarDonadorAsync(TS.BAPLN.DataEntities.DTO.DonadorDTO estudiante) {
            return base.Channel.ActualizarDonadorAsync(estudiante);
        }
        
        public TS.BAPLN.DataEntities.DTO.PeriodicidadDTO[] ObtenerPeriodicidades() {
            return base.Channel.ObtenerPeriodicidades();
        }
        
        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.PeriodicidadDTO[]> ObtenerPeriodicidadesAsync() {
            return base.Channel.ObtenerPeriodicidadesAsync();
        }

        #region Materia
        public TS.BAPLN.DataEntities.DTO.MateriaDTO[] ObtenerCatalogoMaterias()
        {
            return base.Channel.ObtenerCatalogoMaterias();
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.MateriaDTO[]> ObtenerCatalogoMateriasAsync()
        {
            return base.Channel.ObtenerCatalogoMateriasAsync();
        }

        public TS.BAPLN.DataEntities.DTO.MateriaDTO[] ObtenerMaterias(int idInstitucion)
        {
            return base.Channel.ObtenerMaterias(idInstitucion);
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.MateriaDTO[]> ObtenerMateriasAsync(int idInstitucion)
        {
            return base.Channel.ObtenerMateriasAsync(idInstitucion);
        }

        public void ActualizarMateria(TS.BAPLN.DataEntities.DTO.MateriaDTO materia)
        {
            base.Channel.ActualizarMateria(materia);
        }

        public System.Threading.Tasks.Task ActualizarMateriaAsync(TS.BAPLN.DataEntities.DTO.MateriaDTO materia)
        {
            return base.Channel.ActualizarMateriaAsync(materia);
        }

        public void InactivarMateria(int id)
        {
            base.Channel.InactivarMateria(id);
        }

        public System.Threading.Tasks.Task InactivarMateriaAsync(int id)
        {
            return base.Channel.InactivarMateriaAsync(id);
        }

        public void ActivarMateria(int id)
        {
            base.Channel.ActivarMateria(id);
        }

        public System.Threading.Tasks.Task ActivarMateriaAsync(int id)
        {
            return base.Channel.ActivarMateriaAsync(id);
        }

        public int BorrarMateria(int id)
        {
            return base.Channel.BorrarMateria(id);
        }

        public System.Threading.Tasks.Task<int> BorrarMateriaAsync(int id)
        {
            return base.Channel.BorrarMateriaAsync(id);
        }
        #endregion

        #region Periodo
        public TS.BAPLN.DataEntities.DTO.PeriodoDTO[] ObtenerCatalogoPeriodos()
        {
            return base.Channel.ObtenerCatalogoPeriodos();
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.PeriodoDTO[]> ObtenerCatalogoPeriodosAsync()
        {
            return base.Channel.ObtenerCatalogoPeriodosAsync();
        }

        public TS.BAPLN.DataEntities.DTO.PeriodoDTO[] ObtenerPeriodos(int idInstitucion)
        {
            return base.Channel.ObtenerPeriodos(idInstitucion);
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.PeriodoDTO[]> ObtenerPeriodosAsync(int idInstitucion)
        {
            return base.Channel.ObtenerPeriodosAsync(idInstitucion);
        }

        public void ActualizarPeriodo(TS.BAPLN.DataEntities.DTO.PeriodoDTO periodo)
        {
            base.Channel.ActualizarPeriodo(periodo);
        }

        public System.Threading.Tasks.Task ActualizarPeriodoAsync(TS.BAPLN.DataEntities.DTO.PeriodoDTO periodo)
        {
            return base.Channel.ActualizarPeriodoAsync(periodo);
        }

        public void InactivarPeriodo(int id)
        {
            base.Channel.InactivarPeriodo(id);
        }

        public System.Threading.Tasks.Task InactivarPeriodoAsync(int id)
        {
            return base.Channel.InactivarPeriodoAsync(id);
        }

        public void ActivarPeriodo(int id)
        {
            base.Channel.ActivarPeriodo(id);
        }

        public System.Threading.Tasks.Task ActivarPeriodoAsync(int id)
        {
            return base.Channel.ActivarPeriodoAsync(id);
        }

        public int BorrarPeriodo(int id)
        {
            return base.Channel.BorrarPeriodo(id);
        }

        public System.Threading.Tasks.Task<int> BorrarPeriodoAsync(int id)
        {
            return base.Channel.BorrarPeriodoAsync(id);
        }
        #endregion

        #region Nivel
        public TS.BAPLN.DataEntities.DTO.NivelDTO[] ObtenerCatalogoNiveles()
        {
            return base.Channel.ObtenerCatalogoNiveles();
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.NivelDTO[]> ObtenerCatalogoNivelesAsync()
        {
            return base.Channel.ObtenerCatalogoNivelesAsync();
        }

        public TS.BAPLN.DataEntities.DTO.NivelDTO[] ObtenerNiveles(int idInstitucion)
        {
            return base.Channel.ObtenerNiveles(idInstitucion);
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.NivelDTO[]> ObtenerNivelesAsync(int idInstitucion)
        {
            return base.Channel.ObtenerNivelesAsync(idInstitucion);
        }

        public void ActualizarNivel(TS.BAPLN.DataEntities.DTO.NivelDTO nivel)
        {
            base.Channel.ActualizarNivel(nivel);
        }

        public System.Threading.Tasks.Task ActualizarNivelAsync(TS.BAPLN.DataEntities.DTO.NivelDTO nivel)
        {
            return base.Channel.ActualizarNivelAsync(nivel);
        }

        public void InactivarNivel(int id)
        {
            base.Channel.InactivarNivel(id);
        }

        public System.Threading.Tasks.Task InactivarNivelAsync(int id)
        {
            return base.Channel.InactivarNivelAsync(id);
        }

        public void ActivarNivel(int id)
        {
            base.Channel.ActivarNivel(id);
        }

        public System.Threading.Tasks.Task ActivarNivelAsync(int id)
        {
            return base.Channel.ActivarNivelAsync(id);
        }

        public int BorrarNivel(int id)
        {
            return base.Channel.BorrarNivel(id);
        }

        public System.Threading.Tasks.Task<int> BorrarNivelAsync(int id)
        {
            return base.Channel.BorrarNivelAsync(id);
        }
        #endregion

        #region CursoLectivo
        public TS.BAPLN.DataEntities.DTO.CursoLectivoDTO[] ObtenerCatalogoCursosLectivos()
        {
            return base.Channel.ObtenerCatalogoCursosLectivos();
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.CursoLectivoDTO[]> ObtenerCatalogoCursosLectivosAsync()
        {
            return base.Channel.ObtenerCatalogoCursosLectivosAsync();
        }

        public void ActualizarCursoLectivo(TS.BAPLN.DataEntities.DTO.CursoLectivoDTO cursoLectivo)
        {
            base.Channel.ActualizarCursoLectivo(cursoLectivo);
        }

        public System.Threading.Tasks.Task ActualizarCursoLectivoAsync(TS.BAPLN.DataEntities.DTO.CursoLectivoDTO cursoLectivo)
        {
            return base.Channel.ActualizarCursoLectivoAsync(cursoLectivo);
        }

        public void InactivarCursoLectivo(int id)
        {
            base.Channel.InactivarCursoLectivo(id);
        }

        public System.Threading.Tasks.Task InactivarCursoLectivoAsync(int id)
        {
            return base.Channel.InactivarCursoLectivoAsync(id);
        }

        public void ActivarCursoLectivo(int id)
        {
            base.Channel.ActivarCursoLectivo(id);
        }

        public System.Threading.Tasks.Task ActivarCursoLectivoAsync(int id)
        {
            return base.Channel.ActivarCursoLectivoAsync(id);
        }

        public int BorrarCursoLectivo(int id)
        {
            return base.Channel.BorrarCursoLectivo(id);
        }

        public System.Threading.Tasks.Task<int> BorrarCursoLectivoAsync(int id)
        {
            return base.Channel.BorrarCursoLectivoAsync(id);
        }
        #endregion

        #region Institucion
        public TS.BAPLN.DataEntities.DTO.InstitucionDTO[] ObtenerInstituciones()
        {
            return base.Channel.ObtenerInstituciones();
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.InstitucionDTO[]> ObtenerInstitucionesAsync()
        {
            return base.Channel.ObtenerInstitucionesAsync();
        }

        public TS.BAPLN.DataEntities.DTO.InstitucionDTO ObtenerInstitucion(int id)
        {
            return base.Channel.ObtenerInstitucion(id);
        }

        public System.Threading.Tasks.Task<TS.BAPLN.DataEntities.DTO.InstitucionDTO> ObtenerInstitucionAsync(int id)
        {
            return base.Channel.ObtenerInstitucionAsync(id);
        }

        public bool ActualizarInstitucion(TS.BAPLN.DataEntities.DTO.InstitucionDTO institucion, int[] materiasIds, int[] periodosIds, int[] nivelesIds)
        {
            return base.Channel.ActualizarInstitucion(institucion, materiasIds, periodosIds, nivelesIds);
        }

        public System.Threading.Tasks.Task<bool> ActualizarInstitucionAsync(TS.BAPLN.DataEntities.DTO.InstitucionDTO institucion, int[] materiasIds, int[] periodosIds, int[] nivelesIds)
        {
            return base.Channel.ActualizarInstitucionAsync(institucion, materiasIds, periodosIds, nivelesIds);
        }
        #endregion
    }
}
